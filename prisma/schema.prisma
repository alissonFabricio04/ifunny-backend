generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model users {
  id        String  @unique @default(uuid())
  username  String  @unique
  email     String  @unique
  is_active Boolean @default(false)
  password  String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt()

  memes         memes[]
  comments      comments[]
  comments_meme comments_meme[]
  likes         likes[]
}

model memes {
  id          String @unique @default(uuid())
  fk_author   String
  author      users  @relation(fields: [fk_author], references: [id])
  content_uri String @unique

  created_at DateTime @default(now())

  tags          tags[]
  comments      comments[]
  comments_meme comments_meme[]
  likes         likes[]
}

model tags {
  id      String  @unique @default(uuid())
  fk_meme String
  meme    memes   @relation(fields: [fk_meme], references: [id])
  name    String
  weight  Decimal
}

model comments_meme {
  id String @unique @default(uuid())

  fk_author String
  author    users  @relation(fields: [fk_author], references: [id])

  fk_comment String
  comment    comments @relation(fields: [fk_comment], references: [id])

  fk_meme String
  meme    memes  @relation(fields: [fk_meme], references: [id])
}

model comments {
  id        String  @unique @default(uuid())
  text      String?
  fk_repub  String?
  repub     memes?  @relation(fields: [fk_repub], references: [id])
  fk_author String
  author    users   @relation(fields: [fk_author], references: [id])

  comments_meme comments_meme[]
}

model likes {
  id      String @unique @default(uuid())
  fk_user String
  user    users  @relation(fields: [fk_user], references: [id])
  fk_meme String
  meme    memes  @relation(fields: [fk_meme], references: [id])
}
